package gamejam: game;

interface game-host {
    record interactable {
        message: string,
        range: f32
    }

    record collider {
        physical: bool,
        width: f32,
        height: f32
    }

    variant insertable-components {
        attackable,
        collider(collider),
        interactable(interactable),
    }

    variant event-data {
        trigger(u32)
    }

    record event {
        topic: u32,
        data: event-data
    }

    remove-component: func(type-path: string);
    insert-components: func(components: list<insertable-components>);
    play-animation: func(sprite-name: string, animation-name: string, duration-millis: u32, flip-x: bool, repeating: bool);
    publish-event: func(evt: event);
    set-ticking: func(do-tick: bool);
    despawn-entity: func(entity-id: u64);
    get-game-data-kv: func(key: string) -> option<string>;
    set-game-data-kv: func(key: string, value: string) -> option<string>;
    get-game-data-kv-int: func(key: string) -> option<s32>;
    set-game-data-kv-int: func(key: string, value: s32) -> option<s32>;
    level-transition: func(index: u32, target-spawner: string);
}